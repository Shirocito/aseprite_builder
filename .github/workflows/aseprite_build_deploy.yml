name: Build and deploy Aseprite

on:
  push:
    branches:
      - master

env:
  BUILD_TYPE: Release

jobs:
  build-aseprite:
    name: Build Aseprite (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Chocolatey packages
        run: choco install -y ninja python7zip

      - name: Install Visual Studio Build Tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          tools: latest
          vs-version: latest

      - name: Download Aseprite source
        run: |
          curl -L -o Aseprite-source.zip https://github.com/aseprite/aseprite/archive/refs/tags/v1.3.14.2.zip
          unzip Aseprite-source.zip -d aseprite
          mkdir -p aseprite/build

      - name: Cache Skia
        id: skia-cache
        uses: actions/cache@v3
        with:
          path: skia
          key: skia-cache-${{ runner.os }}

      - name: Clone Skia and initialize submodules
        if: steps.skia-cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/aseprite/skia.git
          cd skia
          git checkout m81-b607b32047
          git submodule update --init --recursive

      - name: Compile Skia
        if: steps.skia-cache.outputs.cache-hit != 'true'
        run: |
          cd skia
          python tools/git-sync-deps
          bin/gn gen out/Release-x64 --args="is_official_build=true is_component_build=false"
          ninja -C out/Release-x64

      - name: Compile Aseprite
        run: |
          cd aseprite/build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DLAF_BACKEND=skia -DSKIA_DIR=../../skia -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64 ..
          ninja aseprite

      - name: Create portable zip
        run: |
          cd aseprite/build/bin
          echo "# This file is here so Aseprite behaves as a portable program" > aseprite.ini
          "C:\Program Files\7-Zip\7z.exe" a Aseprite-Windows.zip *

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: aseprite/build/bin/Aseprite-Windows.zip
          asset_name: Aseprite-Windows.zip
          asset_content_type: application/zip
