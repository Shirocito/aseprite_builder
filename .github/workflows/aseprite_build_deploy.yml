name: Build and deploy Aseprite

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

env:
  BUILD_TYPE: Release

jobs:
  check-version:
    name: Check latest Aseprite release
    runs-on: ubuntu-latest
    outputs:
      download_url: ${{ steps.version_info.outputs.download_url }}
      latest_tag: ${{ steps.version_info.outputs.latest_tag }}
      should_build: true
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get latest version info
        id: version_info
        run: |
          data=$(curl -sL https://api.github.com/repos/aseprite/aseprite/releases/latest)
          LATEST_TAG=$(echo "${data}" | jq -r '.tag_name')
          DOWNLOAD_URL=$(echo "${data}" | jq -r '.assets[].browser_download_url')
          VERSION_INFO=$(echo "${data}" | jq -r '.body')
          
          echo "${LATEST_TAG}" > ${LATEST_TAG}.txt
          echo "::set-output name=latest_tag::${LATEST_TAG}"
          echo "::set-output name=download_url::${DOWNLOAD_URL}"
          echo "::set-output name=version_info::${VERSION_INFO}"

      - name: Load version from cache
        id: version_check
        uses: actions/cache@v3
        with:
          path: ${{ steps.version_info.outputs.latest_tag }}.txt
          key: cached_version
          restore-keys: cached_version

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_info.outputs.latest_tag }}
          release_name: Release Aseprite ${{ steps.version_info.outputs.latest_tag }}
          body: |
            ${{ steps.version_info.outputs.version_info }}
          draft: true
          prerelease: false

  build-aseprite:
    name: Build Aseprite (Windows)
    needs: check-version
    runs-on: windows-latest
    steps:
      - name: Install Ninja
        run: choco install ninja -y

      - name: Get Skia from cache
        id: skia-cache
        uses: actions/cache@v3
        with:
          path: skia
          key: skia-windows-cache
          restore-keys: skia-windows-cache

      - name: Download Skia if not in cache
        if: steps.skia-cache.outputs.cache-hit != 'true'
        run: |
          curl -o Skia-Windows-Release-X64.zip -L https://github.com/aseprite/skia/releases/download/m81-b607b32047/Skia-Windows-Release-X64.zip
          unzip Skia-Windows-Release-X64.zip -d skia

      - name: Download Aseprite source
        run: |
          curl -o Aseprite-source.zip -L ${{ needs.check-version.outputs.download_url }}
          unzip Aseprite-source.zip -d aseprite
          mkdir -p aseprite/build

      - name: Set up Visual Studio environment
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" x64

      - name: Run CMake
        working-directory: aseprite/build
        shell: cmd
        run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_IGNORE_PATH='C:/ProgramData/chocolatey/bin/;C:/Strawberry/c/bin/' -DLAF_BACKEND=skia -DSKIA_DIR=../../skia -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64 -G Ninja ..

      - name: Run Ninja
        working-directory: aseprite/build
        run: ninja aseprite

      - name: Clean up build
        working-directory: aseprite/build/bin
        shell: bash
        run: rm -f gen modp_b64_gen gen.exe gen.exe.manifest modp_b64_gen.exe modp_b64_gen.exe.manifest

      - name: Make portable zip
        working-directory: aseprite/build/bin
        run: echo '# This file is here so Aseprite behaves as a portable program' > aseprite.ini

      - name: Create release zip
        working-directory: aseprite/build/bin
        run: '"C:\Program Files\7-Zip\7z.exe" a Aseprite-${{ needs.check-version.outputs.latest_tag }}-Windows.zip *'

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.check-version.outputs.upload_url }}
          asset_path: aseprite/build/bin/Aseprite-${{ needs.check-version.outputs.latest_tag }}-Windows.zip
          asset_name: Aseprite-${{ needs.check-version.outputs.latest_tag }}-Windows.zip
          asset_content_type: application/zip
